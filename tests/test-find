: # simple find
---------------
: write test.c
int var;
: ironout find test.c 6
4 7
: # multiple occurrences
------------------------
: write test.c
int var;
int f() {
	return var;
}
: ironout find test.c 6
4 7
27 30
: # finding in function scopes
------------------------------
: write test.c
int f() {
	int var = 1;
	return var;
}
int g() {
	int var = 1;
	return var;
}
: ironout find test.c 16
15 18
32 35
: # finding enum types
----------------------
: write test.c
int f() {
	enum values {
		VALUE1,
		VALUE2 = 5
	} val1 = VALUE1;
	enum values val2 = VALUE2;
}
int g() {
	int value1, value2, values, val1;
}
: ironout find test.c 20
16 22
72 78
: ironout find test.c 60
27 33
58 64
: # not considering declared enum
---------------------------------
: write test.c
enum values {
	VALUE1,
	VALUE2 = 5
};
int f() {
	enum values;
	enum values val2 = VALUE2;
}
int g() {
	enum values val1 = VALUE1;
}
: ironout find test.c 56
5 11
54 60
68 74
108 114
: # test struct types
---------------------
: write test.c
int f() {
	struct myobj {
		int field1;
		int field2;
	} obj1;
	struct myobj obj2;
}
int g() {
	int myobj, obj1, obj2;
}
: ironout find test.c 20
18 23
71 76
: ironout find test.c 58
57 61
